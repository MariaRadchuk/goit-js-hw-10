{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n// import iconClose from '../img/bi_x-octagon.png';\n// import iconOk from '../img/bi_check2-circle.svg';\n\n// const form = document.querySelector('.form');\n// const submitBtn = document.querySelector('[type=\"submit\"]');\n\n// form.addEventListener('submit', function (event) {\n//   event.preventDefault();\n\n//   const delay = Number(document.querySelector('[name=\"delay\"]').value);\n//   const state = document.querySelector('[name=\"state\"]:checked');\n\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (state.value === 'fulfilled') {\n//         resolve(delay);\n//       } else {\n//         reject(delay);\n//       }\n//     }, delay);\n//   });\n\n//   promise\n//     .then(delay => {\n//       iziToast.success({\n//         message: `Fulfilled promise in ${delay}ms`,\n//         messageColor: '#FFF',\n//         backgroundColor: '#59A10D',\n//         position: 'topRight',\n//         iconUrl: iconOk,\n//       });\n//     })\n//     .catch(delay => {\n//       iziToast.error({\n//         message: `Rejected promise in ${delay}ms`,\n//         messageColor: '#FFF',\n//         backgroundColor: '#EF4040',\n//         position: 'topRight',\n//         iconUrl: iconClose,\n//       });\n//     });\n// });\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector(\".form\");\nconst inputDelay = document.querySelector('[name=\"delay\"]');\n\n\nform.addEventListener(\"submit\", onCreatePromise);\n\nfunction onCreatePromise(e) {\n  e.preventDefault();\n    const delay = Number(inputDelay.value);\n    const inputState = document.querySelector('[name=\"state\"]:checked');\n   \n    const myPromise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (inputState.value === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n        }, delay);\n    });\n    \n    myPromise.then(delay => {\n        iziToast.show({\n        message: `✅ Fulfilled promise in ${delay}ms`,\n        messageColor: '#FFFFFF',\n        backgroundColor: '#59a10d',\n        position: 'topRight',\n        });\n        \n    }).catch(delay => {\n          iziToast.show({\n        message:`❌ Rejected promise in ${delay}ms`,\n        messageColor: '#FFFFFF',\n        backgroundColor: '#ef4040',\n        position: 'topRight',\n        });\n    });\n \n}"],"names":["form","inputDelay","onCreatePromise","e","delay","inputState","resolve","reject","iziToast"],"mappings":"oGA+CA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAa,SAAS,cAAc,gBAAgB,EAG1DD,EAAK,iBAAiB,SAAUE,CAAe,EAE/C,SAASA,EAAgBC,EAAG,CAC1BA,EAAE,eAAc,EACd,MAAMC,EAAQ,OAAOH,EAAW,KAAK,EAC/BI,EAAa,SAAS,cAAc,wBAAwB,EAEhD,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CACTF,EAAW,QAAU,YAC7BC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEX,EAAEA,CAAK,CAChB,CAAK,EAES,KAAKA,GAAS,CACpBI,EAAS,KAAK,CACd,QAAS,0BAA0BJ,CAAK,KACxC,aAAc,UACd,gBAAiB,UACjB,SAAU,UAClB,CAAS,CAET,CAAK,EAAE,MAAMA,GAAS,CACZI,EAAS,KAAK,CAChB,QAAQ,yBAAyBJ,CAAK,KACtC,aAAc,UACd,gBAAiB,UACjB,SAAU,UAClB,CAAS,CACT,CAAK,CAEL"}